{"ast":null,"code":"var _jsxFileName = \"/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-reader/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate from react-router-dom\nimport api from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(() => {\n    // Load user from localStorage if available\n    const savedUser = localStorage.getItem(\"user\");\n    return savedUser ? JSON.parse(savedUser) : null;\n  });\n  const navigate = useNavigate(); // Initialize navigate to redirect user after login\n\n  const login = async ({\n    email,\n    password\n  }) => {\n    try {\n      const response = await api.post(\"/login\", {\n        email,\n        password\n      });\n      const token = response.data.token;\n      localStorage.setItem(\"token\", token);\n\n      // Replace with actual user details from response if available\n      const loggedInUser = {\n        email\n      }; // Modify if API returns more details\n      setUser(loggedInUser);\n      localStorage.setItem(\"user\", JSON.stringify(loggedInUser));\n\n      // Redirect to PostList page after successful login\n      navigate(\"/posts\"); // This is where the user is redirected after login\n    } catch (error) {\n      var _error$response;\n      console.error(\"Login failed:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      throw new Error(\"Invalid login credentials\"); // Handle in UI\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    navigate(\"/\"); // Redirect to the home page after logout\n  };\n\n  // Auto-logout if token expires (you can expand this if needed)\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      setUser(null);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"6craZTtPg4YfxwBWM0uFyKNfxfY=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useNavigate","api","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","savedUser","localStorage","getItem","JSON","parse","navigate","login","email","password","response","post","token","data","setItem","loggedInUser","stringify","error","_error$response","console","message","Error","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-reader/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";  // Import useNavigate from react-router-dom\nimport api from \"../api\";\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(() => {\n    // Load user from localStorage if available\n    const savedUser = localStorage.getItem(\"user\");\n    return savedUser ? JSON.parse(savedUser) : null;\n  });\n\n  const navigate = useNavigate();  // Initialize navigate to redirect user after login\n\n  const login = async ({ email, password }) => {\n    try {\n      const response = await api.post(\"/login\", { email, password });\n      const token = response.data.token;\n      localStorage.setItem(\"token\", token);\n\n      // Replace with actual user details from response if available\n      const loggedInUser = { email }; // Modify if API returns more details\n      setUser(loggedInUser);\n      localStorage.setItem(\"user\", JSON.stringify(loggedInUser));\n\n      // Redirect to PostList page after successful login\n      navigate(\"/posts\");  // This is where the user is redirected after login\n    } catch (error) {\n      console.error(\"Login failed:\", error.response?.data || error.message);\n      throw new Error(\"Invalid login credentials\"); // Handle in UI\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    navigate(\"/\"); // Redirect to the home page after logout\n  };\n\n  // Auto-logout if token expires (you can expand this if needed)\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      setUser(null);\n    }\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAE;AACjD,OAAOC,GAAG,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,MAAM;IACrC;IACA,MAAMY,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC9C,OAAOF,SAAS,GAAGG,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,GAAG,IAAI;EACjD,CAAC,CAAC;EAEF,MAAMK,QAAQ,GAAGf,WAAW,CAAC,CAAC,CAAC,CAAE;;EAEjC,MAAMgB,KAAK,GAAG,MAAAA,CAAO;IAAEC,KAAK;IAAEC;EAAS,CAAC,KAAK;IAC3C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMlB,GAAG,CAACmB,IAAI,CAAC,QAAQ,EAAE;QAAEH,KAAK;QAAEC;MAAS,CAAC,CAAC;MAC9D,MAAMG,KAAK,GAAGF,QAAQ,CAACG,IAAI,CAACD,KAAK;MACjCV,YAAY,CAACY,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;;MAEpC;MACA,MAAMG,YAAY,GAAG;QAAEP;MAAM,CAAC,CAAC,CAAC;MAChCR,OAAO,CAACe,YAAY,CAAC;MACrBb,YAAY,CAACY,OAAO,CAAC,MAAM,EAAEV,IAAI,CAACY,SAAS,CAACD,YAAY,CAAC,CAAC;;MAE1D;MACAT,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAE;IACvB,CAAC,CAAC,OAAOW,KAAK,EAAE;MAAA,IAAAC,eAAA;MACdC,OAAO,CAACF,KAAK,CAAC,eAAe,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACP,QAAQ,cAAAQ,eAAA,uBAAdA,eAAA,CAAgBL,IAAI,KAAII,KAAK,CAACG,OAAO,CAAC;MACrE,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC,CAAC,CAAC;IAChD;EACF,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBtB,OAAO,CAAC,IAAI,CAAC;IACbE,YAAY,CAACqB,UAAU,CAAC,OAAO,CAAC;IAChCrB,YAAY,CAACqB,UAAU,CAAC,MAAM,CAAC;IAC/BjB,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;EACjB,CAAC;;EAED;EACAhB,SAAS,CAAC,MAAM;IACd,MAAMsB,KAAK,GAAGV,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACS,KAAK,EAAE;MACVZ,OAAO,CAAC,IAAI,CAAC;IACf;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA,CAACC,WAAW,CAAC6B,QAAQ;IAACC,KAAK,EAAE;MAAE1B,IAAI;MAAEQ,KAAK;MAAEe;IAAO,CAAE;IAAAzB,QAAA,EAClDA;EAAQ;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC/B,EAAA,CAhDWF,YAAY;EAAA,QAONL,WAAW;AAAA;AAAAuC,EAAA,GAPjBlC,YAAY;AAkDzB,eAAeD,WAAW;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}