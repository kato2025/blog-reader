{"ast":null,"code":"var _jsxFileName = \"/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-reader/src/components/PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport api from '../api';\nimport PostItem from './PostItem';\nimport AuthContext from '../context/AuthContext'; // Import AuthContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext); // Get the user from AuthContext\n  const [posts, setPosts] = useState([]);\n  const [postsLoading, setPostsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Extract the part before \"@\" from the user's email\n  const username = user ? user.email.split('@')[0] : 'Guest'; // Default to 'Guest' if no user\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setPostsLoading(true);\n      try {\n        console.log('Fetching posts from API...');\n        const response = await api.get('/posts');\n        console.log('Posts fetched:', response.data);\n        setPosts(response.data);\n      } catch (err) {\n        var _err$response, _err$response$data;\n        console.error('Failed to fetch posts:', err.response ? err.response.data : err.message);\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'An error occurred while fetching posts.');\n      } finally {\n        setPostsLoading(false);\n      }\n    };\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Welcome, \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Blog Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), postsLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading posts...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 24\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), !postsLoading && posts.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No posts available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 47\n    }, this), !postsLoading && posts.map(post => /*#__PURE__*/_jsxDEV(PostItem, {\n      post: post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 45\n    }, this)), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginBottom: \"-10px\",\n          fontSize: \"1.1rem\",\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Developed by:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), \" Dr. Kato Samuel Namuene\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: \"1.1rem\",\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), \" kato.namuene@ubuea.cm\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(PostList, \"VYH0xXMPT2GWmHia2/flaIysvLs=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useState","useContext","api","PostItem","AuthContext","jsxDEV","_jsxDEV","PostList","_s","user","posts","setPosts","postsLoading","setPostsLoading","error","setError","username","email","split","fetchPosts","console","log","response","get","data","err","_err$response","_err$response$data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","map","post","id","marginBottom","fontSize","textAlign","_c","$RefreshReg$"],"sources":["/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-reader/src/components/PostList.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport api from '../api';\nimport PostItem from './PostItem';\nimport AuthContext from '../context/AuthContext';  // Import AuthContext\n\nconst PostList = () => {\n  const { user } = useContext(AuthContext);  // Get the user from AuthContext\n  const [posts, setPosts] = useState([]);\n  const [postsLoading, setPostsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Extract the part before \"@\" from the user's email\n  const username = user ? user.email.split('@')[0] : 'Guest';  // Default to 'Guest' if no user\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setPostsLoading(true);\n      try {\n        console.log('Fetching posts from API...');\n        const response = await api.get('/posts');\n        console.log('Posts fetched:', response.data);\n        setPosts(response.data);\n      } catch (err) {\n        console.error(\n          'Failed to fetch posts:',\n          err.response ? err.response.data : err.message\n        );\n        setError(\n          err.response?.data?.error ||\n            'An error occurred while fetching posts.'\n        );\n      } finally {\n        setPostsLoading(false);\n      }\n    };\n\n    fetchPosts();\n  }, []);\n\n  return (\n    <div className='posts-wrapper'>\n      <h2>Welcome, {username}</h2>  {/* Display the user's name */}\n      <h3>Blog Posts</h3>\n      {postsLoading && <p>Loading posts...</p>}\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      {!postsLoading && posts.length === 0 && <p>No posts available.</p>}\n      {!postsLoading && posts.map((post) => <PostItem key={post.id} post={post} />)}\n\n      <footer>\n          <p style={{ marginBottom: \"-10px\", fontSize: \"1.1rem\", textAlign: \"center\" }}>\n            <strong>Developed by:</strong> Dr. Kato Samuel Namuene\n          </p>\n          <p style={{ fontSize: \"1.1rem\", textAlign: \"center\"  }}>\n            <strong>Email:</strong> kato.namuene@ubuea.cm\n          </p>\n      </footer>\n    </div>\n  );\n};\n\nexport default PostList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC9D,OAAOC,GAAG,MAAM,QAAQ;AACxB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,WAAW,MAAM,wBAAwB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAK,CAAC,GAAGR,UAAU,CAACG,WAAW,CAAC,CAAC,CAAE;EAC3C,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAMgB,QAAQ,GAAGP,IAAI,GAAGA,IAAI,CAACQ,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAE;;EAE7DnB,SAAS,CAAC,MAAM;IACd,MAAMoB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7BN,eAAe,CAAC,IAAI,CAAC;MACrB,IAAI;QACFO,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;QACzC,MAAMC,QAAQ,GAAG,MAAMpB,GAAG,CAACqB,GAAG,CAAC,QAAQ,CAAC;QACxCH,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEC,QAAQ,CAACE,IAAI,CAAC;QAC5Cb,QAAQ,CAACW,QAAQ,CAACE,IAAI,CAAC;MACzB,CAAC,CAAC,OAAOC,GAAG,EAAE;QAAA,IAAAC,aAAA,EAAAC,kBAAA;QACZP,OAAO,CAACN,KAAK,CACX,wBAAwB,EACxBW,GAAG,CAACH,QAAQ,GAAGG,GAAG,CAACH,QAAQ,CAACE,IAAI,GAAGC,GAAG,CAACG,OACzC,CAAC;QACDb,QAAQ,CACN,EAAAW,aAAA,GAAAD,GAAG,CAACH,QAAQ,cAAAI,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcF,IAAI,cAAAG,kBAAA,uBAAlBA,kBAAA,CAAoBb,KAAK,KACvB,yCACJ,CAAC;MACH,CAAC,SAAS;QACRD,eAAe,CAAC,KAAK,CAAC;MACxB;IACF,CAAC;IAEDM,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA;IAAKuB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BxB,OAAA;MAAAwB,QAAA,GAAI,WAAS,EAACd,QAAQ;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,MAAE,eAC9B5B,OAAA;MAAAwB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClBtB,YAAY,iBAAIN,OAAA;MAAAwB,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACvCpB,KAAK,iBAAIR,OAAA;MAAG6B,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAN,QAAA,EAAEhB;IAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChD,CAACtB,YAAY,IAAIF,KAAK,CAAC2B,MAAM,KAAK,CAAC,iBAAI/B,OAAA;MAAAwB,QAAA,EAAG;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACjE,CAACtB,YAAY,IAAIF,KAAK,CAAC4B,GAAG,CAAEC,IAAI,iBAAKjC,OAAA,CAACH,QAAQ;MAAeoC,IAAI,EAAEA;IAAK,GAApBA,IAAI,CAACC,EAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAAC,CAAC,eAE7E5B,OAAA;MAAAwB,QAAA,gBACIxB,OAAA;QAAG6B,KAAK,EAAE;UAAEM,YAAY,EAAE,OAAO;UAAEC,QAAQ,EAAE,QAAQ;UAAEC,SAAS,EAAE;QAAS,CAAE;QAAAb,QAAA,gBAC3ExB,OAAA;UAAAwB,QAAA,EAAQ;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,4BAChC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJ5B,OAAA;QAAG6B,KAAK,EAAE;UAAEO,QAAQ,EAAE,QAAQ;UAAEC,SAAS,EAAE;QAAU,CAAE;QAAAb,QAAA,gBACrDxB,OAAA;UAAAwB,QAAA,EAAQ;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,0BACzB;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAC1B,EAAA,CArDID,QAAQ;AAAAqC,EAAA,GAARrC,QAAQ;AAuDd,eAAeA,QAAQ;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}