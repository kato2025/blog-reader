{"ast":null,"code":"var _jsxFileName = \"/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-reader/src/components/PostItem.js\",\n  _s = $RefreshSig$();\n// src/components/PostItem.js\nimport React, { useContext, useEffect, useState } from 'react';\nimport api from '../api';\nimport CommentForm from './CommentForm';\nimport AuthContext from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostItem = ({\n  post\n}) => {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n  const [comments, setComments] = useState([]);\n  const [commentsLoading, setCommentsLoading] = useState(true);\n  const [commentsError, setCommentsError] = useState(null);\n  const [showCommentForm, setShowCommentForm] = useState(false);\n  const [showComments, setShowComments] = useState(false);\n  useEffect(() => {\n    if (!(post !== null && post !== void 0 && post.id)) return;\n    const fetchComments = async () => {\n      setCommentsLoading(true);\n      try {\n        const response = await api.get(`/comments?postId=${post.id}`);\n        setComments(response.data);\n      } catch (error) {\n        console.error(`Error fetching comments for post ${post.id}:`, error);\n        setCommentsError('Failed to load comments.');\n      } finally {\n        setCommentsLoading(false);\n      }\n    };\n    fetchComments();\n  }, [post.id]);\n  const handleNewComment = newComment => {\n    if (newComment.postId === post.id) {\n      setComments(prevComments => [...prevComments, newComment]);\n      setShowCommentForm(false);\n    }\n  };\n  const toggleCommentForm = () => setShowCommentForm(prev => !prev);\n  const toggleCommentsVisibility = () => setShowComments(prev => !prev);\n  const handleCancelComment = () => setShowCommentForm(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: '2rem',\n      borderBottom: '1px solid #ccc',\n      paddingBottom: '1rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: post.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Comments (\", comments.length, \")\", comments.length > 0 && /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#!\",\n        onClick: toggleCommentsVisibility,\n        style: {\n          cursor: 'pointer',\n          color: '#3498db',\n          marginLeft: '10px',\n          fontWeight: 'bold'\n        },\n        children: showComments ? 'Hide' : 'Show'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), commentsLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading comments...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 27\n    }, this), commentsError && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: commentsError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }, this), showComments && !commentsLoading && !commentsError && (comments.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No comments yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }, this) : comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '0.5rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [comment.username, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: comment.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }, this)]\n    }, comment.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this))), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '1rem'\n      },\n      children: user ? /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#!\",\n        onClick: toggleCommentForm,\n        style: {\n          cursor: 'pointer',\n          color: '#3498db'\n        },\n        children: showCommentForm ? 'Hide Comment Form' : 'Comment'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/login\",\n          children: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), \" to comment.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), showCommentForm && user && /*#__PURE__*/_jsxDEV(CommentForm, {\n      postId: post.id,\n      onCommentSubmitted: handleNewComment,\n      onCancel: handleCancelComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(PostItem, \"8ydnBUtOcxQlpCW9fcKqx0g2rIY=\");\n_c = PostItem;\nexport default PostItem;\nvar _c;\n$RefreshReg$(_c, \"PostItem\");","map":{"version":3,"names":["React","useContext","useEffect","useState","api","CommentForm","AuthContext","jsxDEV","_jsxDEV","PostItem","post","_s","user","comments","setComments","commentsLoading","setCommentsLoading","commentsError","setCommentsError","showCommentForm","setShowCommentForm","showComments","setShowComments","id","fetchComments","response","get","data","error","console","handleNewComment","newComment","postId","prevComments","toggleCommentForm","prev","toggleCommentsVisibility","handleCancelComment","style","marginBottom","borderBottom","paddingBottom","children","title","fileName","_jsxFileName","lineNumber","columnNumber","content","length","href","onClick","cursor","color","marginLeft","fontWeight","map","comment","username","marginTop","onCommentSubmitted","onCancel","_c","$RefreshReg$"],"sources":["/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-reader/src/components/PostItem.js"],"sourcesContent":["// src/components/PostItem.js\nimport React, { useContext, useEffect, useState } from 'react';\nimport api from '../api';\nimport CommentForm from './CommentForm';\nimport AuthContext from '../context/AuthContext';\n\nconst PostItem = ({ post }) => {\n  const { user } = useContext(AuthContext);\n  const [comments, setComments] = useState([]);\n  const [commentsLoading, setCommentsLoading] = useState(true);\n  const [commentsError, setCommentsError] = useState(null);\n  const [showCommentForm, setShowCommentForm] = useState(false);\n  const [showComments, setShowComments] = useState(false);\n\n  useEffect(() => {\n    if (!post?.id) return;\n\n    const fetchComments = async () => {\n      setCommentsLoading(true);\n      try {\n        const response = await api.get(`/comments?postId=${post.id}`);\n        setComments(response.data);\n      } catch (error) {\n        console.error(`Error fetching comments for post ${post.id}:`, error);\n        setCommentsError('Failed to load comments.');\n      } finally {\n        setCommentsLoading(false);\n      }\n    };\n\n    fetchComments();\n  }, [post.id]);\n\n  const handleNewComment = (newComment) => {\n    if (newComment.postId === post.id) {\n      setComments((prevComments) => [...prevComments, newComment]);\n      setShowCommentForm(false);\n    }\n  };\n\n  const toggleCommentForm = () => setShowCommentForm((prev) => !prev);\n  const toggleCommentsVisibility = () => setShowComments((prev) => !prev);\n  const handleCancelComment = () => setShowCommentForm(false);\n\n  return (\n    <div style={{ marginBottom: '2rem', borderBottom: '1px solid #ccc', paddingBottom: '1rem' }}>\n      <h3>{post.title}</h3>\n      <p>{post.content}</p>\n\n      <h4>\n        Comments ({comments.length})\n        {comments.length > 0 && (\n          <a\n            href=\"#!\"\n            onClick={toggleCommentsVisibility}\n            style={{ cursor: 'pointer', color: '#3498db', marginLeft: '10px', fontWeight: 'bold' }}\n          >\n            {showComments ? 'Hide' : 'Show'}\n          </a>\n        )}\n      </h4>\n\n      {commentsLoading && <p>Loading comments...</p>}\n      {commentsError && <p style={{ color: 'red' }}>{commentsError}</p>}\n      {showComments && !commentsLoading && !commentsError && (\n        comments.length === 0 ? (\n          <p>No comments yet.</p>\n        ) : (\n          comments.map((comment) => (\n            <div key={comment.id} style={{ marginBottom: '0.5rem' }}>\n              <strong>{comment.username}:</strong>\n              <p>{comment.content}</p>\n            </div>\n          ))\n        )\n      )}\n\n      <div style={{ marginTop: '1rem' }}>\n        {user ? (\n          <a href=\"#!\" onClick={toggleCommentForm} style={{ cursor: 'pointer', color: '#3498db' }}>\n            {showCommentForm ? 'Hide Comment Form' : 'Comment'}\n          </a>\n        ) : (\n          <p>\n            <a href=\"/login\">Log in</a> to comment.\n          </p>\n        )}\n      </div>\n\n      {showCommentForm && user && (\n        <CommentForm postId={post.id} onCommentSubmitted={handleNewComment} onCancel={handleCancelComment} />\n      )}\n    </div>\n  );\n};\n\nexport default PostItem;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}