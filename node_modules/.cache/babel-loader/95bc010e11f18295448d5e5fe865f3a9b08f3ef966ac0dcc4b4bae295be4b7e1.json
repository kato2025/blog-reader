{"ast":null,"code":"var _jsxFileName = \"/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-reader/src/components/PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport api from '../api';\nimport PostItem from './PostItem';\nimport AuthContext from '../context/AuthContext'; // Import AuthContext\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext); // Get the user from AuthContext\n  const [posts, setPosts] = useState([]);\n  const [postsLoading, setPostsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Extract the part before \"@\" from the user's email\n  const username = user ? user.email.split('@')[0] : 'Guest'; // Default to 'Guest' if no user\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setPostsLoading(true);\n      try {\n        console.log('Fetching posts from API...');\n        const response = await api.get('/posts');\n        console.log('Posts fetched:', response.data);\n        setPosts(response.data);\n      } catch (err) {\n        var _err$response, _err$response$data;\n        console.error('Failed to fetch posts:', err.response ? err.response.data : err.message);\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'An error occurred while fetching posts.');\n      } finally {\n        setPostsLoading(false);\n      }\n    };\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"bloglogo\",\n        src: \"/namuenetecLogo.png\",\n        alt: \"NamueneTec Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Welcome, \", username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), \"  \", /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Blog Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), postsLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading posts...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 24\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), !postsLoading && posts.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No posts available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 47\n      }, this), !postsLoading && posts.map(post => /*#__PURE__*/_jsxDEV(PostItem, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 45\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginBottom: \"-10px\",\n          fontSize: \"1.1rem\",\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Developed by:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this), \" Dr. Kato Samuel Namuene\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: \"1.1rem\",\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this), \" kato.namuene@ubuea.cm\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(PostList, \"VYH0xXMPT2GWmHia2/flaIysvLs=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useState","useContext","api","PostItem","AuthContext","jsxDEV","_jsxDEV","Fragment","_Fragment","PostList","_s","user","posts","setPosts","postsLoading","setPostsLoading","error","setError","username","email","split","fetchPosts","console","log","response","get","data","err","_err$response","_err$response$data","message","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","map","post","id","marginBottom","fontSize","textAlign","_c","$RefreshReg$"],"sources":["/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-reader/src/components/PostList.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport api from '../api';\nimport PostItem from './PostItem';\nimport AuthContext from '../context/AuthContext';  // Import AuthContext\n\nconst PostList = () => {\n  const { user } = useContext(AuthContext);  // Get the user from AuthContext\n  const [posts, setPosts] = useState([]);\n  const [postsLoading, setPostsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Extract the part before \"@\" from the user's email\n  const username = user ? user.email.split('@')[0] : 'Guest';  // Default to 'Guest' if no user\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setPostsLoading(true);\n      try {\n        console.log('Fetching posts from API...');\n        const response = await api.get('/posts');\n        console.log('Posts fetched:', response.data);\n        setPosts(response.data);\n      } catch (err) {\n        console.error(\n          'Failed to fetch posts:',\n          err.response ? err.response.data : err.message\n        );\n        setError(\n          err.response?.data?.error ||\n            'An error occurred while fetching posts.'\n        );\n      } finally {\n        setPostsLoading(false);\n      }\n    };\n\n    fetchPosts();\n  }, []);\n\n  return (\n    <>\n    <div>\n    <img \n              className=\"bloglogo\"\n              src=\"/namuenetecLogo.png\" \n              alt=\"NamueneTec Logo\"\n            />\n      <h2>Welcome, {username}</h2>  {/* Display the user's name */}\n      <h3>Blog Posts</h3>\n      {postsLoading && <p>Loading posts...</p>}\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      {!postsLoading && posts.length === 0 && <p>No posts available.</p>}\n      {!postsLoading && posts.map((post) => <PostItem key={post.id} post={post} />)}\n    </div>\n    <footer>\n      <p style={{ marginBottom: \"-10px\", fontSize: \"1.1rem\", textAlign: \"center\" }}>\n        <strong>Developed by:</strong> Dr. Kato Samuel Namuene\n      </p>\n      <p style={{ fontSize: \"1.1rem\", textAlign: \"center\" }}>\n        <strong>Email:</strong> kato.namuene@ubuea.cm\n      </p>\n    </footer>\n    </>\n  );\n};\n\nexport default PostList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}