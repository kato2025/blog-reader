{"ast":null,"code":"var _jsxFileName = \"/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-reader/src/components/PostItem.js\",\n  _s = $RefreshSig$();\n// src/components/PostItem.js\nimport React, { useEffect, useState } from 'react';\nimport api from '../api';\nimport CommentForm from './CommentForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostItem = ({\n  post\n}) => {\n  _s();\n  // Always call hooks, even if post is invalid.\n  const [comments, setComments] = useState([]);\n  const validPost = post && post.id;\n  useEffect(() => {\n    // Only fetch comments if post is valid.\n    if (!validPost) return;\n    const fetchComments = async () => {\n      try {\n        console.log(`Fetching comments for post ID: ${post.id}`);\n        // Adjust the URL if needed; here we assume a query parameter approach.\n        const response = await api.get(`/comments?postId=${post.id}`);\n        console.log('Comments response:', response.data);\n        setComments(response.data);\n      } catch (error) {\n        console.error(`Error fetching comments for post ${post.id}:`, error);\n      }\n    };\n    fetchComments();\n  }, [post, validPost]);\n\n  // If post is invalid, render nothing (or a fallback UI).\n  if (!validPost) {\n    return null;\n  }\n\n  // Callback to add a new comment to state immediately after posting.\n  const handleNewComment = newComment => {\n    setComments(prevComments => [...prevComments, newComment]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: '2rem',\n      borderBottom: '1px solid #ccc',\n      paddingBottom: '1rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: post.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Comments:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), comments.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No comments yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this) : comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '0.5rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [comment.username, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: comment.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)]\n    }, comment.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(CommentForm, {\n      postId: post.id,\n      onCommentSubmitted: handleNewComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(PostItem, \"ByfV/t0DOiJY0nGyfgV+6QjIggQ=\");\n_c = PostItem;\nexport default PostItem;\nvar _c;\n$RefreshReg$(_c, \"PostItem\");","map":{"version":3,"names":["React","useEffect","useState","api","CommentForm","jsxDEV","_jsxDEV","PostItem","post","_s","comments","setComments","validPost","id","fetchComments","console","log","response","get","data","error","handleNewComment","newComment","prevComments","style","marginBottom","borderBottom","paddingBottom","children","title","fileName","_jsxFileName","lineNumber","columnNumber","content","length","map","comment","username","postId","onCommentSubmitted","_c","$RefreshReg$"],"sources":["/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-reader/src/components/PostItem.js"],"sourcesContent":["// src/components/PostItem.js\nimport React, { useEffect, useState } from 'react';\nimport api from '../api';\nimport CommentForm from './CommentForm';\n\nconst PostItem = ({ post }) => {\n  // Always call hooks, even if post is invalid.\n  const [comments, setComments] = useState([]);\n  const validPost = post && post.id;\n\n  useEffect(() => {\n    // Only fetch comments if post is valid.\n    if (!validPost) return;\n\n    const fetchComments = async () => {\n      try {\n        console.log(`Fetching comments for post ID: ${post.id}`);\n        // Adjust the URL if needed; here we assume a query parameter approach.\n        const response = await api.get(`/comments?postId=${post.id}`);\n        console.log('Comments response:', response.data);\n        setComments(response.data);\n      } catch (error) {\n        console.error(`Error fetching comments for post ${post.id}:`, error);\n      }\n    };\n\n    fetchComments();\n  }, [post, validPost]);\n\n  // If post is invalid, render nothing (or a fallback UI).\n  if (!validPost) {\n    return null;\n  }\n\n  // Callback to add a new comment to state immediately after posting.\n  const handleNewComment = (newComment) => {\n    setComments((prevComments) => [...prevComments, newComment]);\n  };\n\n  return (\n    <div\n      style={{\n        marginBottom: '2rem',\n        borderBottom: '1px solid #ccc',\n        paddingBottom: '1rem',\n      }}\n    >\n      <h3>{post.title}</h3>\n      <p>{post.content}</p>\n\n      <h4>Comments:</h4>\n      {comments.length === 0 ? (\n        <p>No comments yet.</p>\n      ) : (\n        comments.map((comment) => (\n          <div key={comment.id} style={{ marginBottom: '0.5rem' }}>\n            <strong>{comment.username}:</strong>\n            <p>{comment.content}</p>\n          </div>\n        ))\n      )}\n\n      <CommentForm postId={post.id} onCommentSubmitted={handleNewComment} />\n    </div>\n  );\n};\n\nexport default PostItem;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}