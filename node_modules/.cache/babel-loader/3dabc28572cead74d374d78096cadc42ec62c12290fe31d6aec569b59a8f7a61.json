{"ast":null,"code":"var _jsxFileName = \"/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-reader/src/components/PostItem.js\",\n  _s = $RefreshSig$();\n// src/components/PostItem.js\nimport React, { useEffect, useState } from 'react';\nimport api from '../api';\nimport CommentForm from './CommentForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostItem = ({\n  post\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        console.log(`Fetching comments for post ID: ${post.id}`);\n        const response = await api.get(`/posts/${post.id}/comments`);\n        console.log('Comments response:', response.data);\n        setComments(response.data);\n      } catch (error) {\n        console.error(`Error fetching comments for post ${post.id}:`, error);\n      }\n    };\n    fetchComments();\n  }, [post.id]);\n  const handleNewComment = newComment => {\n    setComments(prevComments => [...prevComments, newComment]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: '2rem',\n      borderBottom: '1px solid #ccc',\n      paddingBottom: '1rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: post.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Comments:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), comments.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No comments yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '0.5rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [comment.username, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: comment.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, comment.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(CommentForm, {\n      postId: post.id,\n      onCommentSubmitted: handleNewComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(PostItem, \"ByfV/t0DOiJY0nGyfgV+6QjIggQ=\");\n_c = PostItem;\nexport default PostItem;\nvar _c;\n$RefreshReg$(_c, \"PostItem\");","map":{"version":3,"names":["React","useEffect","useState","api","CommentForm","jsxDEV","_jsxDEV","PostItem","post","_s","comments","setComments","fetchComments","console","log","id","response","get","data","error","handleNewComment","newComment","prevComments","style","marginBottom","borderBottom","paddingBottom","children","title","fileName","_jsxFileName","lineNumber","columnNumber","content","length","map","comment","username","postId","onCommentSubmitted","_c","$RefreshReg$"],"sources":["/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-reader/src/components/PostItem.js"],"sourcesContent":["// src/components/PostItem.js\nimport React, { useEffect, useState } from 'react';\nimport api from '../api';\nimport CommentForm from './CommentForm';\n\nconst PostItem = ({ post }) => {\n  const [comments, setComments] = useState([]);\n\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        console.log(`Fetching comments for post ID: ${post.id}`);\n        const response = await api.get(`/posts/${post.id}/comments`);\n        console.log('Comments response:', response.data);\n        setComments(response.data);\n      } catch (error) {\n        console.error(`Error fetching comments for post ${post.id}:`, error);\n      }\n    };\n\n    fetchComments();\n  }, [post.id]);\n\n  const handleNewComment = (newComment) => {\n    setComments((prevComments) => [...prevComments, newComment]);\n  };\n\n  return (\n    <div style={{ marginBottom: '2rem', borderBottom: '1px solid #ccc', paddingBottom: '1rem' }}>\n      <h3>{post.title}</h3>\n      <p>{post.content}</p>\n      \n      <h4>Comments:</h4>\n      {comments.length === 0 ? (\n        <p>No comments yet.</p>\n      ) : (\n        comments.map((comment) => (\n          <div key={comment.id} style={{ marginBottom: '0.5rem' }}>\n            <strong>{comment.username}:</strong>\n            <p>{comment.content}</p>\n          </div>\n        ))\n      )}\n      \n      <CommentForm postId={post.id} onCommentSubmitted={handleNewComment} />\n    </div>\n  );\n};\n\nexport default PostItem;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}