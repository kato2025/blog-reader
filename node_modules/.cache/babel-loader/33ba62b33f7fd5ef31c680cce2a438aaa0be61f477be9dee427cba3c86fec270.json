{"ast":null,"code":"var _jsxFileName = \"/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-reader/src/components/PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport api from '../api';\nimport PostItem from './PostItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await api.get('/posts');\n        console.log('Fetched Posts:', response.data); // Debugging log\n        setPosts(response.data);\n      } catch (error) {\n        console.error('Failed to fetch posts:', error);\n        if (error.response) {\n          setError(`Server Error: ${error.response.status} - ${error.response.data.message}`);\n        } else if (error.request) {\n          setError('Failed to fetch posts. No response from server.');\n        } else {\n          setError('An unknown error occurred.');\n        }\n      }\n    };\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Blog Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this), posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No posts available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 29\n    }, this) : posts.map(post => /*#__PURE__*/_jsxDEV(PostItem, {\n      post: post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 78\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(PostList, \"k/i6/CQ9z/20h34rTderKnfEXI4=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useState","api","PostItem","jsxDEV","_jsxDEV","PostList","_s","posts","setPosts","error","setError","fetchPosts","response","get","console","log","data","status","message","request","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","map","post","id","_c","$RefreshReg$"],"sources":["/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-reader/src/components/PostList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport api from '../api';\nimport PostItem from './PostItem';\n\nconst PostList = () => {\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await api.get('/posts');\n        console.log('Fetched Posts:', response.data); // Debugging log\n        setPosts(response.data);\n      } catch (error) {\n        console.error('Failed to fetch posts:', error);\n        if (error.response) {\n          setError(`Server Error: ${error.response.status} - ${error.response.data.message}`);\n        } else if (error.request) {\n          setError('Failed to fetch posts. No response from server.');\n        } else {\n          setError('An unknown error occurred.');\n        }\n      }\n    };\n  \n    fetchPosts();\n  }, []);  \n\n  return (\n    <div>\n      <h2>Blog Posts</h2>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      {posts.length === 0 ? <p>No posts available.</p> : posts.map((post) => <PostItem key={post.id} post={post} />)}\n    </div>\n  );\n};\n\nexport default PostList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,QAAQ;AACxB,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMX,GAAG,CAACY,GAAG,CAAC,QAAQ,CAAC;QACxCC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;QAC9CR,QAAQ,CAACI,QAAQ,CAACI,IAAI,CAAC;MACzB,CAAC,CAAC,OAAOP,KAAK,EAAE;QACdK,OAAO,CAACL,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9C,IAAIA,KAAK,CAACG,QAAQ,EAAE;UAClBF,QAAQ,CAAC,iBAAiBD,KAAK,CAACG,QAAQ,CAACK,MAAM,MAAMR,KAAK,CAACG,QAAQ,CAACI,IAAI,CAACE,OAAO,EAAE,CAAC;QACrF,CAAC,MAAM,IAAIT,KAAK,CAACU,OAAO,EAAE;UACxBT,QAAQ,CAAC,iDAAiD,CAAC;QAC7D,CAAC,MAAM;UACLA,QAAQ,CAAC,4BAA4B,CAAC;QACxC;MACF;IACF,CAAC;IAEDC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClBf,KAAK,iBAAIL,OAAA;MAAGqB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAN,QAAA,EAAEX;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChDjB,KAAK,CAACoB,MAAM,KAAK,CAAC,gBAAGvB,OAAA;MAAAgB,QAAA,EAAG;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAAGjB,KAAK,CAACqB,GAAG,CAAEC,IAAI,iBAAKzB,OAAA,CAACF,QAAQ;MAAe2B,IAAI,EAAEA;IAAK,GAApBA,IAAI,CAACC,EAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3G,CAAC;AAEV,CAAC;AAAClB,EAAA,CAhCID,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAkCd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}