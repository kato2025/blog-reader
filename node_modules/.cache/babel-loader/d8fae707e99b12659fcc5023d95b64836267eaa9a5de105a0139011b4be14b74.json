{"ast":null,"code":"var _jsxFileName = \"/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-reader/src/components/PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport api from '../api';\nimport PostItem from './PostItem';\nimport CommentList from './CommentList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [expandedPosts, setExpandedPosts] = useState([]);\n  const [newComments, setNewComments] = useState({});\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await api.get('/posts');\n        setPosts(response.data);\n      } catch (error) {\n        console.error('Failed to fetch posts:', error);\n        if (error.response) {\n          setError(`Server Error: ${error.response.status} - ${error.response.data.message}`);\n        } else if (error.request) {\n          setError('Failed to fetch posts. No response from server.');\n        } else {\n          setError('An unknown error occurred.');\n        }\n      }\n    };\n    fetchPosts();\n  }, []);\n\n  // Toggle comments visibility\n  const toggleComments = postId => {\n    setExpandedPosts(prevExpanded => prevExpanded.includes(postId) ? prevExpanded.filter(id => id !== postId) : [...prevExpanded, postId]);\n  };\n\n  // Handle new comment input\n  const handleCommentChange = (postId, value) => {\n    setNewComments(prev => ({\n      ...prev,\n      [postId]: value\n    }));\n  };\n\n  // Submit new comment\n  const submitComment = async postId => {\n    if (!newComments[postId]) return;\n    try {\n      const response = await api.post(`/posts/${postId}/comments`, {\n        content: newComments[postId]\n      });\n      setPosts(prevPosts => prevPosts.map(post => post.id === postId ? {\n        ...post,\n        comments: [...post.comments, response.data]\n      } : post));\n      setNewComments(prev => ({\n        ...prev,\n        [postId]: ''\n      }));\n    } catch (error) {\n      console.error('Error adding comment:', error);\n      alert('Failed to add comment.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Blog Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this), posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading posts...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this) : posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-card\",\n      children: [/*#__PURE__*/_jsxDEV(PostItem, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-toggle-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"comment-count\",\n          children: [\"Comments (\", post.comments ? post.comments.length : 0, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleComments(post.id),\n          className: \"btn btn-toggle\",\n          children: expandedPosts.includes(post.id) ? 'Hide Comments' : 'Show Comments'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), expandedPosts.includes(post.id) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-section\",\n        children: [/*#__PURE__*/_jsxDEV(CommentList, {\n          postId: post.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Write a comment...\",\n            value: newComments[post.id] || '',\n            onChange: e => handleCommentChange(post.id, e.target.value),\n            rows: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => submitComment(post.id),\n            className: \"btn btn-submit\",\n            children: \"Add Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(PostList, \"KYXrooJkkWMbzTFBtAt4jAh/ZcY=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useState","api","PostItem","CommentList","jsxDEV","_jsxDEV","PostList","_s","posts","setPosts","expandedPosts","setExpandedPosts","newComments","setNewComments","error","setError","fetchPosts","response","get","data","console","status","message","request","toggleComments","postId","prevExpanded","includes","filter","id","handleCommentChange","value","prev","submitComment","post","content","prevPosts","map","comments","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","className","onClick","placeholder","onChange","e","target","rows","_c","$RefreshReg$"],"sources":["/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-reader/src/components/PostList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport api from '../api';\nimport PostItem from './PostItem';\nimport CommentList from './CommentList';\n\nconst PostList = () => {\n  const [posts, setPosts] = useState([]);\n  const [expandedPosts, setExpandedPosts] = useState([]);\n  const [newComments, setNewComments] = useState({});\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await api.get('/posts');\n        setPosts(response.data);\n      } catch (error) {\n        console.error('Failed to fetch posts:', error);\n        if (error.response) {\n          setError(`Server Error: ${error.response.status} - ${error.response.data.message}`);\n        } else if (error.request) {\n          setError('Failed to fetch posts. No response from server.');\n        } else {\n          setError('An unknown error occurred.');\n        }\n      }\n    };\n\n    fetchPosts();\n  }, []);\n\n  // Toggle comments visibility\n  const toggleComments = (postId) => {\n    setExpandedPosts((prevExpanded) =>\n      prevExpanded.includes(postId)\n        ? prevExpanded.filter((id) => id !== postId)\n        : [...prevExpanded, postId]\n    );\n  };\n\n  // Handle new comment input\n  const handleCommentChange = (postId, value) => {\n    setNewComments((prev) => ({\n      ...prev,\n      [postId]: value,\n    }));\n  };\n\n  // Submit new comment\n  const submitComment = async (postId) => {\n    if (!newComments[postId]) return;\n\n    try {\n      const response = await api.post(`/posts/${postId}/comments`, {\n        content: newComments[postId],\n      });\n\n      setPosts((prevPosts) =>\n        prevPosts.map((post) =>\n          post.id === postId\n            ? { ...post, comments: [...post.comments, response.data] }\n            : post\n        )\n      );\n      setNewComments((prev) => ({ ...prev, [postId]: '' }));\n    } catch (error) {\n      console.error('Error adding comment:', error);\n      alert('Failed to add comment.');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Blog Posts</h2>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      {posts.length === 0 ? (\n        <p>Loading posts...</p>\n      ) : (\n        posts.map((post) => (\n          <div key={post.id} className=\"post-card\">\n            <PostItem post={post} />\n\n            {/* Comment Toggle */}\n            <div className=\"comment-toggle-container\">\n              <span className=\"comment-count\">\n                Comments ({post.comments ? post.comments.length : 0})\n              </span>\n              <button onClick={() => toggleComments(post.id)} className=\"btn btn-toggle\">\n                {expandedPosts.includes(post.id) ? 'Hide Comments' : 'Show Comments'}\n              </button>\n            </div>\n\n            {/* Comments Section */}\n            {expandedPosts.includes(post.id) && (\n              <div className=\"comment-section\">\n                <CommentList postId={post.id} />\n\n                {/* Add New Comment */}\n                <div className=\"comment-form\">\n                  <textarea\n                    placeholder=\"Write a comment...\"\n                    value={newComments[post.id] || ''}\n                    onChange={(e) => handleCommentChange(post.id, e.target.value)}\n                    rows=\"3\"\n                  />\n                  <button onClick={() => submitComment(post.id)} className=\"btn btn-submit\">\n                    Add Comment\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default PostList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}