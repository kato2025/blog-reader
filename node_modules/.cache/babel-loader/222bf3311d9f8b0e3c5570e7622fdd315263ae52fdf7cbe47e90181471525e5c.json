{"ast":null,"code":"var _jsxFileName = \"/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-reader/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport api from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(() => {\n    const savedUser = localStorage.getItem(\"user\");\n    return savedUser ? JSON.parse(savedUser) : null;\n  });\n  const login = async ({\n    email,\n    password\n  }) => {\n    try {\n      const response = await api.post(\"/login\", {\n        email,\n        password\n      });\n      const token = response.data.token;\n      localStorage.setItem(\"token\", token);\n      const loggedInUser = {\n        email\n      }; // Modify if API returns more details\n      setUser(loggedInUser);\n      localStorage.setItem(\"user\", JSON.stringify(loggedInUser));\n    } catch (error) {\n      var _error$response;\n      console.error(\"Login failed:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      throw new Error(\"Invalid login credentials\"); // Handle in UI\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n  };\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      setUser(null);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"uYO72kmEh+J3gVwSuZq99sJn3qk=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","api","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","savedUser","localStorage","getItem","JSON","parse","login","email","password","response","post","token","data","setItem","loggedInUser","stringify","error","_error$response","console","message","Error","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-reader/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\nimport api from \"../api\";\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(() => {\n    const savedUser = localStorage.getItem(\"user\");\n    return savedUser ? JSON.parse(savedUser) : null;\n  });\n\n  const login = async ({ email, password }) => {\n    try {\n      const response = await api.post(\"/login\", { email, password });\n      const token = response.data.token;\n      localStorage.setItem(\"token\", token);\n\n      const loggedInUser = { email };  // Modify if API returns more details\n      setUser(loggedInUser);\n      localStorage.setItem(\"user\", JSON.stringify(loggedInUser));\n\n    } catch (error) {\n      console.error(\"Login failed:\", error.response?.data || error.message);\n      throw new Error(\"Invalid login credentials\");  // Handle in UI\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n  };\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      setUser(null);\n    }\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,GAAG,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,MAAM;IACrC,MAAMW,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC9C,OAAOF,SAAS,GAAGG,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,GAAG,IAAI;EACjD,CAAC,CAAC;EAEF,MAAMK,KAAK,GAAG,MAAAA,CAAO;IAAEC,KAAK;IAAEC;EAAS,CAAC,KAAK;IAC3C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMjB,GAAG,CAACkB,IAAI,CAAC,QAAQ,EAAE;QAAEH,KAAK;QAAEC;MAAS,CAAC,CAAC;MAC9D,MAAMG,KAAK,GAAGF,QAAQ,CAACG,IAAI,CAACD,KAAK;MACjCT,YAAY,CAACW,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;MAEpC,MAAMG,YAAY,GAAG;QAAEP;MAAM,CAAC,CAAC,CAAE;MACjCP,OAAO,CAACc,YAAY,CAAC;MACrBZ,YAAY,CAACW,OAAO,CAAC,MAAM,EAAET,IAAI,CAACW,SAAS,CAACD,YAAY,CAAC,CAAC;IAE5D,CAAC,CAAC,OAAOE,KAAK,EAAE;MAAA,IAAAC,eAAA;MACdC,OAAO,CAACF,KAAK,CAAC,eAAe,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACP,QAAQ,cAAAQ,eAAA,uBAAdA,eAAA,CAAgBL,IAAI,KAAII,KAAK,CAACG,OAAO,CAAC;MACrE,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC,CAAC,CAAE;IACjD;EACF,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBrB,OAAO,CAAC,IAAI,CAAC;IACbE,YAAY,CAACoB,UAAU,CAAC,OAAO,CAAC;IAChCpB,YAAY,CAACoB,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EAED/B,SAAS,CAAC,MAAM;IACd,MAAMoB,KAAK,GAAGT,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACQ,KAAK,EAAE;MACVX,OAAO,CAAC,IAAI,CAAC;IACf;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA,CAACC,WAAW,CAAC4B,QAAQ;IAACC,KAAK,EAAE;MAAEzB,IAAI;MAAEO,KAAK;MAAEe;IAAO,CAAE;IAAAxB,QAAA,EAClDA;EAAQ;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC9B,EAAA,CAxCWF,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AA0CzB,eAAeD,WAAW;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}