{"ast":null,"code":"var _jsxFileName = \"/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-reader/src/components/PostList.js\",\n  _s = $RefreshSig$();\n// PostList.js\nimport React, { useEffect, useState } from 'react';\nimport { publicApi } from '../api'; // Use the public instance\nimport PostItem from './PostItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [postsLoading, setPostsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setPostsLoading(true);\n      try {\n        const response = await publicApi.get('/posts');\n        setPosts(response.data);\n      } catch (err) {\n        setError('An error occurred while fetching posts.');\n      } finally {\n        setPostsLoading(false);\n      }\n    };\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Blog Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), postsLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading posts...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 24\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this), !postsLoading && posts.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No posts available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 47\n    }, this), !postsLoading && posts.map(post => /*#__PURE__*/_jsxDEV(PostItem, {\n      post: post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 45\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(PostList, \"xZp6nayi3AP59DR8sZPLjY+jxUU=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useState","publicApi","PostItem","jsxDEV","_jsxDEV","PostList","_s","posts","setPosts","postsLoading","setPostsLoading","error","setError","fetchPosts","response","get","data","err","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","map","post","id","_c","$RefreshReg$"],"sources":["/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-reader/src/components/PostList.js"],"sourcesContent":["// PostList.js\nimport React, { useEffect, useState } from 'react';\nimport { publicApi } from '../api'; // Use the public instance\nimport PostItem from './PostItem';\n\nconst PostList = () => {\n  const [posts, setPosts] = useState([]);\n  const [postsLoading, setPostsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setPostsLoading(true);\n      try {\n        const response = await publicApi.get('/posts');\n        setPosts(response.data);\n      } catch (err) {\n        setError('An error occurred while fetching posts.');\n      } finally {\n        setPostsLoading(false);\n      }\n    };\n\n    fetchPosts();\n  }, []);\n\n  return (\n    <div>\n      <h2>Blog Posts</h2>\n      {postsLoading && <p>Loading posts...</p>}\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      {!postsLoading && posts.length === 0 && <p>No posts available.</p>}\n      {!postsLoading && posts.map((post) => <PostItem key={post.id} post={post} />)}\n    </div>\n  );\n};\n\nexport default PostList;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,QAAQ,CAAC,CAAC;AACpC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMc,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7BH,eAAe,CAAC,IAAI,CAAC;MACrB,IAAI;QACF,MAAMI,QAAQ,GAAG,MAAMb,SAAS,CAACc,GAAG,CAAC,QAAQ,CAAC;QAC9CP,QAAQ,CAACM,QAAQ,CAACE,IAAI,CAAC;MACzB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZL,QAAQ,CAAC,yCAAyC,CAAC;MACrD,CAAC,SAAS;QACRF,eAAe,CAAC,KAAK,CAAC;MACxB;IACF,CAAC;IAEDG,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClBb,YAAY,iBAAIL,OAAA;MAAAc,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACvCX,KAAK,iBAAIP,OAAA;MAAGmB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAN,QAAA,EAAEP;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChD,CAACb,YAAY,IAAIF,KAAK,CAACkB,MAAM,KAAK,CAAC,iBAAIrB,OAAA;MAAAc,QAAA,EAAG;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACjE,CAACb,YAAY,IAAIF,KAAK,CAACmB,GAAG,CAAEC,IAAI,iBAAKvB,OAAA,CAACF,QAAQ;MAAeyB,IAAI,EAAEA;IAAK,GAApBA,IAAI,CAACC,EAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1E,CAAC;AAEV,CAAC;AAAChB,EAAA,CA9BID,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAgCd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}