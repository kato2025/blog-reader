{"ast":null,"code":"var _jsxFileName = \"/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-reader/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\n// src/context/AuthContext.js\nimport React, { createContext, useState, useEffect } from 'react';\nimport api from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  // Initialize from localStorage (if available)\n  const [user, setUser] = useState(() => {\n    const storedUser = localStorage.getItem('user');\n    return storedUser ? JSON.parse(storedUser) : null;\n  });\n  const [token, setToken] = useState(() => localStorage.getItem('token') || '');\n  const login = async ({\n    email,\n    password\n  }) => {\n    try {\n      const response = await api.post('/login', {\n        email,\n        password\n      });\n      const receivedToken = response.data.token;\n      // Save token and user details (adjust according to your backend response)\n      localStorage.setItem('token', receivedToken);\n      setToken(receivedToken);\n      // Here you may also fetch user details from the token or a /me endpoint.\n      const loggedInUser = {\n        email\n      }; // Replace with full user details if available\n      localStorage.setItem('user', JSON.stringify(loggedInUser));\n      setUser(loggedInUser);\n    } catch (error) {\n      throw error;\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setToken('');\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n  };\n\n  // Optionally, update token from localStorage on mount (if needed)\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token') || '';\n    setToken(storedToken);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"h3UNiG37meN5yNbGzIjTHOfh6O4=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","api","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","storedUser","localStorage","getItem","JSON","parse","token","setToken","login","email","password","response","post","receivedToken","data","setItem","loggedInUser","stringify","error","logout","removeItem","storedToken","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/drnamuene/Documents/Training/Odin Project/Notes/Node/Projects/blog_app/blog-reader/src/context/AuthContext.js"],"sourcesContent":["// src/context/AuthContext.js\nimport React, { createContext, useState, useEffect } from 'react';\nimport api from '../api';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  // Initialize from localStorage (if available)\n  const [user, setUser] = useState(() => {\n    const storedUser = localStorage.getItem('user');\n    return storedUser ? JSON.parse(storedUser) : null;\n  });\n  const [token, setToken] = useState(() => localStorage.getItem('token') || '');\n\n  const login = async ({ email, password }) => {\n    try {\n      const response = await api.post('/login', { email, password });\n      const receivedToken = response.data.token;\n      // Save token and user details (adjust according to your backend response)\n      localStorage.setItem('token', receivedToken);\n      setToken(receivedToken);\n      // Here you may also fetch user details from the token or a /me endpoint.\n      const loggedInUser = { email }; // Replace with full user details if available\n      localStorage.setItem('user', JSON.stringify(loggedInUser));\n      setUser(loggedInUser);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    setToken('');\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n  };\n\n  // Optionally, update token from localStorage on mount (if needed)\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token') || '';\n    setToken(storedToken);\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user, token, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,GAAG,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,MAAM;IACrC,MAAMW,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,OAAOF,UAAU,GAAGG,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,GAAG,IAAI;EACnD,CAAC,CAAC;EACF,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,MAAMY,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;EAE7E,MAAMK,KAAK,GAAG,MAAAA,CAAO;IAAEC,KAAK;IAAEC;EAAS,CAAC,KAAK;IAC3C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMnB,GAAG,CAACoB,IAAI,CAAC,QAAQ,EAAE;QAAEH,KAAK;QAAEC;MAAS,CAAC,CAAC;MAC9D,MAAMG,aAAa,GAAGF,QAAQ,CAACG,IAAI,CAACR,KAAK;MACzC;MACAJ,YAAY,CAACa,OAAO,CAAC,OAAO,EAAEF,aAAa,CAAC;MAC5CN,QAAQ,CAACM,aAAa,CAAC;MACvB;MACA,MAAMG,YAAY,GAAG;QAAEP;MAAM,CAAC,CAAC,CAAC;MAChCP,YAAY,CAACa,OAAO,CAAC,MAAM,EAAEX,IAAI,CAACa,SAAS,CAACD,YAAY,CAAC,CAAC;MAC1DhB,OAAO,CAACgB,YAAY,CAAC;IACvB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBnB,OAAO,CAAC,IAAI,CAAC;IACbO,QAAQ,CAAC,EAAE,CAAC;IACZL,YAAY,CAACkB,UAAU,CAAC,MAAM,CAAC;IAC/BlB,YAAY,CAACkB,UAAU,CAAC,OAAO,CAAC;EAClC,CAAC;;EAED;EACA7B,SAAS,CAAC,MAAM;IACd,MAAM8B,WAAW,GAAGnB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE;IACvDI,QAAQ,CAACc,WAAW,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE3B,OAAA,CAACC,WAAW,CAAC2B,QAAQ;IAACC,KAAK,EAAE;MAAExB,IAAI;MAAEO,KAAK;MAAEE,KAAK;MAAEW;IAAO,CAAE;IAAAtB,QAAA,EACzDA;EAAQ;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC7B,EAAA,CA1CWF,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AA4CzB,eAAeD,WAAW;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}